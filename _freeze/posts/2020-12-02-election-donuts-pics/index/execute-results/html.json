{
  "hash": "74a818f7e49c930766ada9f24a732168",
  "result": {
    "markdown": "---\ntitle: \"Donut Chart and Geofacets with Images\"\ndescription: |\n  In this post, I recreate the donut chart overlaid on geo facets. Based on a friend's feedback, I now add pictures of winners of each state.\ndate: \"2020-12-02\"\n---\n\n\n\n\nFor the background and more details on this plot, please check out my earlier blog post: https://dataviz.school/posts/2020-11-20--us-election-donut/\n\n## Getting the data\n\nAs of the date of this writing (21st November 2020), the results of the US Presidential elections have not tallied. The counting is still going on in a few states. However, it is unlikely that the results will change significantly from this point onward. I decided to get data from this Github repo, which scrapes data from NYT. The data is at county-level: https://github.com/favstats/USElection2020-NYT-Results\n\n## Final plot\n\nThis is the plot I created. I have used Biden and Trump pictures from www.pixabay.com. Check it out for a lot of free, attribution-free images. I also tried using Trump and Biden icons but it did not work well. I got Trump and Biden icons from here respectively:\n\n[Trump icon](https://icons8.com/icons/set/donald-trump) [Biden icon](https://icons8.com/icons/set/joe-biden)\n\nThese are free to use with attribution.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=1056}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n## Code to create the plot\n\nHere is the code to recreate these plots. Note that I am assuming that you are using the code to prepare data from my [previous post](https://dataviz.school/posts/2020-11-20--us-election-donut/).\n\nThe main challenge in creating this plot is mismatch of the coordinate system. The donuts are created using polar coordinates. It's not possible to overlay images on top of those donuts in `ggplot2`. I decided to use a workaround, which I have successfully used in the past to create dataviz for my wife. I first created two separate plots. First plot is the main donut chart which I created previously. The second plot is just a facet plot of Biden and Trump images. Next I used `cowplot` package to overlay these two plots on top of each other. It may sound pretty easy but it took me a lot of time to align those two plots perfectly. The key was to use `coord_fixed()` in the second plot.\n\n### Create a data set with images\n\nHere I am creating a data set with a column containing links to either Biden or Trump images. I am also making sure that I retain the winner in each state and DC. The resulting data has 51 rows. Note that in the plot I use `image2` variable to overlay images. If you instead want the icons, use `image` in `geom_image()` in the code below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt3 <- dt2 %>%\n  arrange(state, -votes) %>% \n  group_by(state) %>% \n  filter(row_number() == 1) %>% \n  ungroup() %>% \n  mutate(image = case_when(Candidate == \"Biden\" ~ \"https://github.com/ashgreat/dataviz-blog/raw/main/Images/joe-biden.png\",\n                           Candidate == \"Trump\" ~ \"https://github.com/ashgreat/dataviz-blog/raw/main/Images/donald-trump.png\"),\n         image2 = case_when(Candidate == \"Biden\" ~ \"https://github.com/ashgreat/dataviz-blog/raw/main/Images/biden-small-pixabay.png\",\n                           Candidate == \"Trump\" ~ \"https://github.com/ashgreat/dataviz-blog/raw/main/Images/trump-small-pixabay.png\")\n         )\n```\n:::\n\n\n### Create donut charts\n\nThis code is basically copied from the previous post.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng3 <- dt2 %>% \n  group_by(state) %>% \n  arrange(Candidate) %>% \n  mutate(ymax = cumsum(per_votes),\n         ymin = ifelse(row_number() == 1, 0, lag(ymax)),\n         ypos = (ymin + ymax) / 2) %>% \n  ungroup() %>% \n  ggplot(aes(ymin = ymin, ymax = ymax, xmin = 3, xmax = 4)) +\n  geom_rect(aes(fill = Candidate)) +\n  geom_text(x = 5, \n             aes(y = ypos, \n                 label = formattable::percent(round(per_votes, 2), digits = 0)),\n             size = 2, color = \"white\") +\n  coord_polar(theta = \"y\") +\n  facet_geo(~state) +\n  scale_fill_manual(values = c(\"#0066f2\", \"#e6f1fd\", \"#ff0000\")) +\n  theme_void()+\n  xlim(-1, 5) +\n  labs(caption = \"Ashwin Malshe \\nhttps://dataviz.school\",\n       subtitle = \" \") +\n  theme(legend.text = element_text(family = \"proxima\", size = 10, color = \"white\"),\n        legend.title = element_blank(),\n        legend.direction = \"horizontal\",\n        legend.position = c(0.2, 1),\n        plot.caption = element_text(family = \"proxima\", size = 10, hjust = 0.95,\n                                    margin = margin(0, 0, 5, 0, \"pt\"),\n                                    face = \"bold\", color = \"#69fffb\"),\n        strip.text = element_text(family = \"proxima\", size = 9, color = \"white\",\n                                  margin = margin(0, 0, 5, 0, \"pt\")),\n        strip.background = element_blank(),\n        plot.background = element_rect(fill = \"#2e3440\", color = NA),\n        panel.background = element_rect(fill = \"#2e3440\", color = NA))\n\n\n# Print the plot\n\ng3\n```\n:::\n\n\n### Create the plot of images\n\nThis is the plot that will be layered on top of the donut chart. Note `geon_image()` from `ggimage` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng4 <- ggplot(dt3) +\n  facet_geo(~state) +\n  ggimage::geom_image(aes(x = 0.5, y = -1, image = image), size = 0.5) +\n  theme_void()+\n  xlim(0, 1) +\n  coord_fixed() + # This is critical!\n  theme(\n        strip.background = element_blank(),\n        strip.text = element_blank(),\n        panel.background = element_blank(),\n        plot.background = element_blank())\n```\n:::\n\n\n### Superimposing the two plots\n\nThis was easy. I just layered `g4` on `g3` using `align_plots()` from the fatnastic package `cowplot`. Finally, I plotted them and saved in an object `g5`. Note that if you use the same font as the one I used here, `cowplot` will generate many error messages. Ignore them as it won't affect your output.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naligned_plots <- cowplot::align_plots(g3, g4, align=\"hv\", greedy = FALSE)\n\ng5 <- ggdraw(aligned_plots[[1]]) +\n  draw_plot(aligned_plots[[2]])\n```\n:::\n\n\nI hope you enjoyed this post!\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}